# 1.lap_Ki√≠rat√°s, adatbek√©r√©s billenty≈±zetr≈ël, v√°ltoz√≥k, matematikai m≈±veletek

# 1. feladat
# Programunk k√©rje be egy ember lakhely√©nek ir√°ny√≠t√≥sz√°m√°t, a v√°rost, a k√∂zter√ºlet nev√©t, a k√∂zter√ºlet jelleg√©t,
# a h√°zsz√°mot √©s v√©g√ºl √≠rja ki egy sorban a k√∂vetkez≈ë form√°tumban: Pl.: 1042 Budapest Tanoda t√©r 2. (lakcim)
'''
irszam = input("K√©rem adja meg az irsz√°m√°t: ")
telepules = input("K√©rem adja meg a telep√ºl√©s√©t: ")
kozterneve = input("K√©rem adja meg az k√∂zter√ºlet nev√©t: ")
kozter_jellege = input("K√©rem adja meg az k√∂zter√ºlet jelleg√©t: ")
hazszam = input("K√©rem adja meg a h√°zsz√°m√°t: ")

print(f'{irszam} {telepules} {kozterneve} {kozter_jellege} {hazszam}.')  '''

# 2. feladat
# Olvassunk be k√©t vezet√©k- √©s k√©t keresztnevet, √©s √≠rassuk ki az ezekb≈ël k√©pezhet≈ë neveket! (nevek)
'''
import math
v_nev1 = input("K√©rem adjon meg egy vezet√©knevet: ")
v_nev2 = input("K√©rem adjon meg egy m√°sik vezet√©knevet: ")
k_nev1 = input("K√©rem adjon meg egy keresztnevet: ")
k_nev2 = input("K√©rem adjon meg egy m√°sik keresztnevet: ")

print(f'{v_nev1} {k_nev1}, {v_nev1} {k_nev2}, {v_nev2} {k_nev1}, {v_nev2} {k_nev2}')   '''

# 3. feladat
# Olvassuk be a havi fizet√©st, √©s eredm√©nyk√©nt √≠rassuk ki az √©ves fizet√©st! Milyen t√≠pus√∫ v√°ltoz√≥kat haszn√°lhatunk? (fizetes)
'''
haviber = int(input(f'K√©rem adja meg a havi b√©r√©t: '))

print(f'√âves b√©r: {haviber*12} Ft')   '''

# 4. feladat
# Programunk k√©rje be az Eur√≥ √°rfolyam√°t (1 ‚Ç¨ h√°ny Ft-ot √©r), majd azt, hogy h√°ny eur√≥t akarunk √°tv√°ltani Ft-ba,
# majd √≠rja ki, hogy h√°ny Ft az √°tv√°ltott eur√≥. (euro)
'''
euro_arfolyam = int(input('K√©rem adja meg az eur√≥ √°rfolyam√°t: '))
atvalt = int(input('K√©rem adja meg az √°tv√°ltand√≥ √∂sszeget: '))

print(f'Az √°tv√°ltott Eur√≥: {euro_arfolyam * atvalt} Ft')   '''

# 5. feladat
# √çrjunk programot, amely bek√©ri egy t√©glalap oldalait, √©s kisz√°molja a ker√ºlet√©t √©s ter√ºlet√©t! (teglalap_ker_ter)
'''
teglalap1 = int(input('K√©rem adja meg a t√©glalap egyik oldal√°nak hossz√°t: '))
teglalap2 = int(input('K√©rem adja meg a t√©glalap m√°sik oldal√°nak hossz√°t: '))

print(f'A t√©glalap ker√ºlete: {2* (teglalap1+teglalap2)}')
print(f'A t√©glalap ter√ºlete: {teglalap1*teglalap2}')   '''

# 6. feladat
# Irjunk programot, amely bek√©ri egy k√∂r sugar√°t, √©s kisz√°molja a k√∂r ker√ºlet√©t √©s ter√ºlet√©t! (kor_ker_ter)
'''
import math
r = int(input('K√©rem adja meg a k√∂r sugar√°t: '))
K = 2 * r * math.pi
T = r ** 2 * math.pi

print(f'A k√∂r ker√ºlete: {K}\nA k√∂r tet√ºlete: {T}')   '''

# 7. feladat
# √çrjunk programot a Pitagorasz-t√©tel alkalmaz√°s√°ra! A program k√©rje be egy der√©ksz√∂g≈± h√°romsz√∂g k√©t
# befog√≥j√°t, √©s sz√°m√≠tsa ki az √°tfog√≥ hossz√°t! (pitagorasz)
'''
import math
a = float(input('K√©rem adja meg az egyik befog√≥t:'))
b = float(input('K√©rem adja meg az m√°sik befog√≥t:'))
c =math.sqrt(a ** 2 + b ** 2)

print(f'Az √°tfog√≥: {c}')  '''

# 8. feladat
# Programunk k√©rje be a megtett √∫t hossz√°t √©s az eltelt id≈ët, √©s sz√°m√≠tsa ki az √°tlagsebess√©get! (atlagsebesseg)
'''
megtett_ut = float(input('K√©rem adja meg az √∫t hossz√°t: '))
eltelt_ido = float(input('K√©rem adja meg az eltelt id≈ët: '))
atlagseb = megtett_ut // eltelt_ido

print(f'√Åtlagsebess√©g: {atlagseb} km/h')   '''

# 9. feladat
# Programunk k√©rje be egy aut√≥ fogyaszt√°s√°t (literben 100 km-en), a benzin literenk√©nti √°r√°t √©s a megteend≈ë
# √∫t hossz√°t, majd sz√°m√≠tsa ki az √∫tik√∂lts√©get! (uzemanyag)
'''
fogyasztas = float(input('K√©rem adja meg az aut√≥ fogyaszt√°s√°t (l): '))
benzinar = int(input('K√©rem adja meg a benzin √°r√°t (Ft): '))
uthossza = float(input('K√©rem adja meg az √∫t hossz√°t (km): '))
utikoltseg = uthossza / 100 * fogyasztas * benzinar

print(f'√ötik√∂lts√©g: {utikoltseg} Ft')   '''

# 10. feladat
# K√©rj√ºk be a felhaszn√°l√≥ t√∂meg√©t kg-ban √©s magass√°g√°t cm-ben, majd sz√°m√≠tsuk ki √©s √≠rjuk a k√©perny≈ëre a
# felhaszn√°l√≥ testt√∂megindex√©t az al√°bbi k√©plet alapj√°n! TTI=ùíï√∂ùíéùíÜùíà/ùíéùíÇùíàùíÇùíîùíî√°ùíàùüê
# Figyelj r√°, hogy a k√©pletben a magass√°g m√©terben megadott √©rt√©k√©vel kell sz√°molni! (testtomegindex)
'''
tomeg = float(input('K√©rem adja meg a t√∂meg√©t (kg):'))
magassag = float(input('K√©rem adja meg a magass√°g√°t (cm):'))
ttindex = tomeg / ((magassag/100) ** 2)

print(f'Testt√∂megindexe: {ttindex}')   '''

# 11. feladat
# Z√∂lds√©ges standunkon h√°romf√©le term√©ket √°rulunk: alm√°t, szilv√°t √©s sz≈ël≈ët. A program √≠rja ki a gy√ºm√∂lcs
# nev√©t √©s kilogrammonk√©nti egys√©g√°r√°t, majd k√©rdezze meg, hogy mennyit szeretn√©nk v√°s√°rolni. A v√°s√°rolt
# mennyis√©g mellett jelenjen meg a fizetend≈ë √∂sszeg, majd a v√©g√∂sszeget is adjuk meg! (zoldseges)
'''
alma = 300
szilva = 200
szolo = 600

print(f'Alma: {alma} Ft/kg\nSzilva: {szilva} Ft/kg\nSz≈ël≈ë: {szolo} Ft/kg')

alma_kg = float(input('Mennyi alm√°t szeretne v√°s√°rolni (kg): '))
alma_ar = alma * alma_kg
print(f'Alma √°ra: {alma_ar} Ft/kg')
szilva_kg = float(input('Mennyi szilv√°t szeretne v√°s√°rolni (kg): '))
szilva_ar = szilva * szilva_kg
print(f'Szilva √°ra: {szilva_ar} Ft/kg')
szolo_kg = float(input('Mennyi sz≈ël≈ët szeretne v√°s√°rolni (kg): '))
szolo_ar = szolo * szolo_kg
print(f'Sz≈ël≈ë √°ra: {szolo_ar} Ft/kg')
ossz = alma_ar + szilva_ar + szolo_ar
print(f'V√©g√∂sszeg: {ossz} Ft')   '''

# 12. feladat
# Programunk k√©rje be egy hord√≥ √©s egy kancs√≥ t√©rfogat√°t literekben m√©rve eg√©sz sz√°mk√©nt! Szeretn√©nk
# tudni, hogy h√°ny teli kancs√≥ m√©rhet≈ë ki a hord√≥b√≥l, mennyi v√≠z marad a hord√≥ban a teli kancs√≥k kimer√©se
# ut√°n. Mennyi a hord√≥ √©s a kancs√≥ t√©rfogat√°nak h√°nyadosa? (hordo)
'''
hordo = int(input('K√©rem adja meg a hord√≥ t√©rfogat√°t (l): '))
kancso = int(input('K√©rem adja meg a kancs√≥ t√©rfogat√°t (l): '))
teli_kancso = hordo // kancso
maradek_viz = hordo % kancso
hanyados = hordo / kancso
print(f'Kim√©rt teli kancs√≥: {teli_kancso}'
      f'\nA hord√≥ban maradt v√≠z: {maradek_viz} l25'
      f'\nA hord√≥ √©s a kancs√≥ h√°nyadosa: {hanyados}')   '''

# 13. feladat
# A bankjegyautomat√°b√≥l az √ºgyf√©l legfeljebb 300 000 Ft-ot vehet f√∂l, 1 000, 5 000 √©s 10 000 Ft-os
# c√≠mletekben. A program k√©rjen be egy ezerrel oszthat√≥ √∂sszeget, majd hat√°rozza meg, hogy egy beolvasott
# √∂sszeget milyen c√≠mletekben kell kifizetni, ha a lehet≈ë legkevesebb bankjegyet akarjuk felhaszn√°lni. (bankjegy)
# A megold√°st a k√∂vetkez≈ë form√°ban √≠rja ki:

# 14. feladat
# Programunk k√©rje be egy eszk√∂z m√°sodpercekben m√©rt √ºzemidej√©t! Eredm√©nyk√©nt adja meg ‚Ä¶nap ‚Ä¶√≥ra
# ‚Ä¶m√°sodperc form√°ban az √ºzemid≈ët! (uzemido)
'''
uzemido = int(input('K√©rem adja meg az √ºzemid≈ët (sec): '))
eredmeny_nap = uzemido // 86400
eredmeny_ora = (uzemido % 86400) // 3600
eredmeny_sec = (uzemido % 86400) % 3600
print(f'√územid≈ë: {eredmeny_nap} nap {eredmeny_ora} √≥ra {eredmeny_sec} m√°sodperc')  '''


# 15. feladat
# √çrjunk programot, amely kisz√°m√≠tja egy aut√≥val megtett √∫tra fizetett k√∂lts√©gt√©r√≠t√©st! A program k√©rje be a
# megtett √∫t hossz√°t km-ben, az aut√≥ fogyaszt√°s√°t 100 km-en literben valamint az √ºzemanyag √°r√°t √©s ezek
# ismeret√©ben sz√°m√≠tsa ki az √ºzemanyagk√∂lts√©get. A megtett √∫tra, a fogyaszt√°sra , √©s az √ºzemanyag √°r√°ra is
# fogadjon el t√∂rt sz√°mokat is.
# [Az √ºzemanyagk√∂lts√©g kisz√°m√≠t√°s√°ra haszn√°ld az al√°bbi k√©pletet: √ºzemanyagk√∂lts√©g=(√∫t*fogyaszt√°s*√ºzemanyag √°r)/100 ]
# A k√∂lts√©gt√©r√≠t√©s √∂sszege 100 km-n√©l nem hosszabb √∫t eset√©n maga az √ºzemanyagk√∂lts√©g, enn√©l hosszabb
# √∫t eset√©n az √ºzemanyagk√∂lts√©ghez hozz√°adj√°k a megtett √∫t 25-sz√∂r√∂s√©t √©s √≠gy kapjuk meg a k√∂lts√©gt√©r√≠t√©st.
# A program c√≠me "Utaz√°si k√∂lts√©gt√©r√≠t√©s" legyen √©s minta szerinti form√°ban √≠rja ki az adatokat! (utazasikoltseg)



# El√°gaz√°sok
# 16. feladat
# K√©rj√ºk be a k√ºls≈ë h≈ëm√©rs√©kletet, √©s √≠rassuk ki, ha fagy odakint! (fagy)
'''
homerseklet = float(input('K√©rem adja meg a kinti h≈ëm√©rs√©kletet: '))
if homerseklet < 0:
    print(f'Fagy.')  '''

# 17. feladat
# K√©rdezz√ºk meg a felhaszn√°l√≥t√≥l, hogy szeret-e programozni, ha igen, akkor √≠rassunk ki, hogy ‚ÄûM√©g sokra
# viszed az √©letben!‚Äù, majd k√∂sz√∂nj√∂n el a program (Viszontl√°t√°sra!). (kerdes)
'''
kerdes = input('Szeretsz programozni? ')
if kerdes == 'igen':
    print(f'M√©g sokra viszed az √©letben!\nViszontl√°t√°sra!')   '''

# 18. feladat
# K√©rj√ºnk be egy eg√©sz sz√°mot, √©s √≠rassuk ki hogy az adott sz√°m p√°ros-e vagy sem. (paritas)
'''
szam = int(input('K√©rem adjon meg egy sz√°mot: '))
if szam % 2 == 0:
    print(f'P√°ros.')
else:
    print(f'P√°ratlan.')   '''

# 19. feladat
# Olvassunk be egy sz√°mot a billenty≈±zetr≈ël, √©s √≠rjuk ki, hogy oszthat√≥-e 3-mal! (oszthato3)
'''
szam = int(input('K√©rem adjon meg egy sz√°mot: '))
if szam % 3 == 0:
    print(f'Oszthat√≥ 3-al!')
else:
    print(f'Nem osztaht√≥ 3-al.')   '''

# 20. feladat
# Olvasson be a billenty≈±zetr≈ël egy sz√°mot √©s mondjuk meg, hogy a sz√°m negat√≠v, vagy pozit√≠v vagy egyik
# sem! (elojel)
'''
szam = int(input('K√©rem adjon meg egy sz√°mot: '))
if szam < 0:
    print(f'Negat√≠v sz√°m.')
elif szam > 0:
    print(f'Pozit√≠v sz√°m.')
else:
    print(f'Egyik sem.')   '''

# 21. feladat
# K√©t beolvasott sz√°mot √≠rassunk ki √∫gy, hogy k√∂z√©j√ºk tessz√ºk a megfelel≈ë rel√°ci√≥s jelet (<,>,=)! (relacio)
'''
szam1 = input('K√©rem adjon meg egy sz√°mot: ')
szam2 = input('K√©rem adjon meg egy m√°sik sz√°mot: ')
if szam1 > szam2:
    print(f'{szam1} > {szam2}')
elif szam1 < szam2:
    print(f'{szam1} < {szam2}')
else:
    print(f'{szam1} = {szam2}')   '''

# 22. feladat
# Egy beolvasott sz√°mr√≥l d√∂ntse el a program hogy -30 √©s 40 k√∂z√∂tt van-e! (kozotte)
'''
szam = int(input('K√©rem adjon meg egy sz√°mot: '))
if szam < 40 and szam > -30:
    print(f'A megadott sz√°m -30 √©s 40 k√∂z√∂tt van.')
else:
    print(f'Nincs k√∂z√∂tte.')   '''

# 23. feladat
# √çrjunk programot,amely √©rt√©kel egy dolgozatot pontsz√°m alapj√°n! Az √©rt√©kel√©s a k√∂vetkez≈ë t√°bl√°zat alapj√°n t√∂rt√©njen:
# Pontsz√°m √ârt√©kel√©s
# 0 - 42 el√©gtelen
# 43 - 57 el√©gs√©ges
# 58 - 72 k√∂zepes
# 73 - 87 j√≥
# 88 - 100 jeles
'''
pontszam = int(input('K√©rem adja meg a dolgozat pontsz√°m√°t: '))
if pontszam < 42:
    print(f'√ârt√©kel√©se: el√©gtelen.')
elif 43 < pontszam < 57:
    print(f'√ârt√©kel√©se: el√©gs√©ges.')
elif 58 < pontszam < 73:
    print(f'√ârt√©kel√©se: k√∂zepes.')
elif 73 < pontszam < 87:
    print(f'√ârt√©kel√©se: j√≥.')
else:
    print(f'√ârt√©kel√©se: jeles.')    '''

# 24. feladat
# √çrj programot, amely bek√©r a felhaszn√°l√≥t√≥l egy helys√©gnevet, valamint ennek a helys√©gnek a l√©leksz√°m√°t,
# √©s a megadott l√©leksz√°mt√≥l f√ºgg≈ëen ki√≠rja, hogy az adott helys√©g milyen telep√ºl√©st√≠pusba tartozik.
# (telepules)
# ÔÄ≠ ha a l√©leksz√°m kevesebb, mint 5000, akkor k√∂zs√©g
# ÔÄ≠ ha a l√©leksz√°m legal√°bb 5000, de kevesebb, mint 20 000, akkor kisv√°ros
# ÔÄ≠ ha a l√©leksz√°m legal√°bb 20 000, de kevesebb, mint 100 000, akkor k√∂z√©pv√°ros
# ÔÄ≠ ha a l√©leksz√°m legal√°bb 100 000, de kevesebb, mint 1 000 000, akkor nagyv√°ros
# ÔÄ≠ ha a l√©leksz√°m legal√°bb 1 000 000, akkor metropolis
# ÔÄ≠ ha a felhaszn√°l√≥ 0 vagy ann√°l kisebb sz√°mot ad meg, a program √≠rja ki, hogy "Hib√°s adatbevitel"
'''
input('K√©rem adjon meg egy helys√©gnevet: ')
lelekszam = int(input('K√©rem adja meg a helys√©g l√©leksz√°m√°t: '))
if 1 <= lelekszam < 5000:
    print(f'k√∂zs√©g')
elif 5000 <= lelekszam < 20000:
    print(f'kisv√°ros')
elif 20000 <= lelekszam < 100000:
    print(f'k√∂z√©pv√°ros')
elif 100000 <= lelekszam < 1000000:
    print(f'nagyv√°ros')
elif 1000000 <= lelekszam:
    print(f'metropolis')
else:
    print(f'Hib√°s adatbevitel.')   '''

# 25. feladat
# A program k√©rjen be k√©t sz√°mot, √©s egy m≈±veleti jelet (+,-,/,*), majd √≠rja ki a m≈±velet eredm√©ny√©t.
# (muvelet)
'''
szam1 = int(input('K√©rem adjon meg egy sz√°mot: '))
szam2 = int(input('K√©rem adjon meg egy m√°sik sz√°mot: '))
jel = input('K√©rem adjon meg egy m≈±veleti jelet (+,-,/,*): ')
if jel == "+":
    print(szam1+szam2)
elif jel == "-":
    print(szam1-szam2)
elif jel == "/":
    print(szam1/szam2)
elif jel == "*":
    print(szam1*szam2)  '''

# 26. feladat
# K√©rj√ºk be egy di√°k matematika √©v v√©gi jegy√©t numerikus form√°ban, √©s √≠rjuk ki azt sz√∂vegesen (el√©gtelen,
# el√©gs√©ges, k√∂zepes, j√≥, jeles). Amennyiben a be√≠rt √©rdemjegy nem 1..5 k√∂z√∂tti sz√°m, √∫gy a hib√°s adat ki√≠r√°s
# jelenjen meg. (osztalyzat)
'''
jegy = int(input('K√©rem adja meg a matek √©v v√©gi jegy√©t: '))
if jegy == 1:
    print(f'√ârt√©kel√©se: el√©gtelen')
elif jegy == 2:
    print(f'√ârt√©kel√©se: el√©gs√©ges')
elif jegy == 3:
    print(f'√ârt√©kel√©se: k√∂zepes')
elif jegy == 4:
    print(f'√ârt√©kel√©se: j√≥')
elif jegy == 5:
    print(f'√ârt√©kel√©se: jeles')
else:
    print(f'Hib√°s adat.')   '''

# 27. feladat
# K√©rj√ºk be egy nap sorsz√°m√°t (1..7) numerikus form√°ban, √©s √≠rjuk ki a nap megnevez√©s√©t a k√©perny≈ëre
# (h√©tf≈ë, kedd, ..., vas√°rnap). Amennyiben a be√≠rt sorsz√°m nem 1..7 k√∂z√∂tti sz√°m, √∫gy a hib√°s adat ki√≠r√°s
# jelenjen meg. (hetnapjai)
'''
sorszam = int(input('K√©rem adja egy nap sorsz√°m√°t: '))
if sorszam == 1:
    print(f'Ez a h√©tf≈ë.')
elif sorszam == 2:
    print(f'Ez a kedd.')
elif sorszam == 3:
    print(f'Ez a szerda.')
elif sorszam == 4:
    print(f'Ez a cs√ºt√∂rt√∂k.')
elif sorszam == 5:
    print(f'Ez a p√©ntek.')
elif sorszam == 6:
    print(f'Ez a szombat.')
elif sorszam == 7:
    print(f'Ez a vas√°rnap.')
else:
    print(f'Hib√°s adat.')   '''

# 28. feladat
# K√©rj√ºk be egy h√≥nap sorsz√°m√°t (1..12) numerikus form√°ban, √©s √≠rjuk ki a h√≥nap megnevez√©s√©t a k√©perny≈ëre
# (janu√°r, ..., december). Amennyiben a be√≠rt sorsz√°m nem 1..12 k√∂z√∂tti sz√°m, √∫gy a hib√°s adat ki√≠r√°s jelenjen
# meg. (honapok)
'''
sorszam = int(input('K√©rem adja egy h√≥nap sorsz√°m√°t: '))
if sorszam == 1:
    print(f'Ez a janu√°r.')
elif sorszam == 2:
    print(f'Ez a febru√°r.')
elif sorszam == 3:
    print(f'Ez a m√°rcius.')
elif sorszam == 4:
    print(f'Ez a √°prilis.')
elif sorszam == 5:
    print(f'Ez a m√°jus.')
elif sorszam == 6:
    print(f'Ez a j√∫nius.')
elif sorszam == 7:
    print(f'Ez a j√∫lius.')
elif sorszam == 8:
    print(f'Ez a augusztus.')
elif sorszam == 9:
    print(f'Ez a szeptember.')
elif sorszam == 10:
    print(f'Ez a okt√≥ber.')
elif sorszam == 11:
    print(f'Ez a november.')
elif sorszam == 12:
    print(f'Ez a december.')
else:
    print(f'Hib√°s adat.')   '''

'''
month = int(input('K√©rem adja meg egy h√≥nap sorsz√°m√°t: '))
months = ["janu√°r", "febru√°r", "m√°rcius",
          "√°prilis", "m√°jus", "j√∫nius",
          "j√∫lius", "augusztus", "szeptember",
          "okt√≥ber", "november", "december"]
print(months[month-1])
'''

# 29. feladat
# K√©rj√ºk be egy √°ru egys√©g√°r√°t (Ft), a v√°s√°rland√≥ mennyis√©get (db), √©s hogy mennyi p√©nz van n√°lunk (Ft).
# Adjuk meg, hogy meg tudjuk-e v√°s√°rolni a k√≠v√°nt darabsz√°mot, √©s ez esetben mennyi p√©nz√ºnk maradna a
# v√°s√°rl√°s ut√°n. Ha nincs el√©g p√©nz√ºnk, akkor azt adjuk meg, h√°ny darab term√©k megv√°s√°rl√°s√°ra lenne csak
# el√©g a p√©nz√ºnk. (vasarlas)
'''
ar = int(input('K√©rem adja meg az egys√©g√°rat (Ft): '))
mennyiseg = int(input('K√©rem adja a v√°s√°rland√≥ mennyis√©get (db): '))
penz = int(input('K√©rem adja meg az √∂nn√©l l√©v≈ë p√©nzmennyis√©get (Ft): '))



'''

# 30. feladat
# Adott √©vr≈ël d√∂nts√ºk el, hogy sz√∂k≈ë√©v-e! (Sz√∂k≈ë√©vek a k√∂vetkez≈ëk: minden n√©ggyel oszthat√≥ √©v, kiv√©ve a
# sz√°zzal is oszthat√≥kat. Sz√∂k≈ë√©vek viszont a 400-zal oszthat√≥ √©vek. Vagyis a sz√°zasra v√©gz≈ëd≈ë √©vek k√∂z√ºl
# csak azok sz√∂k≈ë√©vek, amelyek 400-zal is oszthat√≥k.) (szokoev)



# V√©letlensz√°mok
# 31. feladat
# Gener√°ljunk h√°romjegy≈± v√©letlensz√°mot! (haromjegyu)
'''
import  random as r
print(r.randint(100, 999))   '''

# 32. feladat
# Programunk adjon meg v√©letlenszer≈±en egy 0 √©s 25 k√∂z√∂tti eg√©sz sz√°mot, illetve egy 0 √©s 25 k√∂z√∂tti
# tizedest√∂rtet! (veletlenszam1)
'''
import random as r
print(r.randint(0,25))
print(float(r.randint(0,25)))   '''

# 33. feladat
# Programunk adjon meg v√©letlenszer≈±en egy 15 √©s 25 k√∂z√∂tti eg√©sz sz√°mot, illetve egy 15 √©s 25 k√∂z√∂tti
# tizedest√∂rtet! (veletlenszam2)
'''
import random as r
print(r.randint(15,25))
print(float(r.randint(15,25)))   '''

# 34. feladat
# Programunk adjon meg egy 0-n√°l nem kisebb, de 100-n√°l kisebb tetsz≈ëleges p√°ros sz√°mot! (veletlen_paros)
'''
import random
vszam = 1
while vszam % 2 != 0:
     vszam = random.randint(0, 100)
print(f'P√°ros v√©letlen sz√°m: {vszam}')   '''

# 35. feladat
# Gener√°ljunk a [100,200] tartom√°nyb√≥l egy 5-tel oszthat√≥ sz√°mot! (veletlen_5)
'''
import random
vszam = 1
while vszam % 5 != 0:
     vszam = random.randint(100, 200)
print(f'√ñttel oszthat√≥ sz√°m: {vszam}')  '''

# 36. feladat
# Tetsz≈ëleges 0 √©s egymilli√≥ k√∂z√∂tti eg√©sz sz√°mr√≥l mondja meg a program hogy h√°ny jegy≈±! (hanyjegyu)
'''
import random
vszam = random.randint(0,1000000)
print(vszam)
if 0 < vszam < 10:
     print(f'A sz√°m egyjegy≈±.')
elif 9 < vszam < 100:
     print(f'A sz√°m k√©tjegy≈±.')
elif 99 < vszam < 1000:
     print(f'A sz√°m h√°romjegy≈±.')
elif 999 < vszam < 10000:
     print(f'A sz√°m n√©gyjegy≈±.')
elif 9999 < vszam < 100000:
     print(f'A sz√°m √∂tjegy≈±.')
else:
     print(f'A sz√°m hatjegy≈±.')   '''

# vagy
'''
import random as rng
num = rng.randint(0, 1000000)
print(f'A sz√°m: {num}\n{len(str(num))} jegy≈±.')
'''
# 37. feladat
# Gener√°ljunk 6 kockadob√°st! (kockadobas)
'''
import random
print(random.randint(1, 6))
print(random.randint(1, 6))
print(random.randint(1, 6))
print(random.randint(1, 6))
print(random.randint(1, 6))
print(random.randint(1, 6))  '''

# vagy
'''
import random as rng
for x in range(6):
    print(f'{x + 1}.dob√°s: {rng.randint(1, 6)}')
'''
# 38. feladat
# Gener√°ljunk v√©letlenszer≈±en 5 k√ºl√∂nb√∂z≈ë lott√≥sz√°mot! (lotto)
'''
import random
print(random.randint(1,90))
print(random.randint(1,90))
print(random.randint(1,90))
print(random.randint(1,90))
print(random.randint(1,90))   '''

# 39. feladat
# A program tal√°ljon ki k√©t v√©letlen sz√°mot 10..50 k√∂z√∂tt, majd √≠rja ki ≈ëket a k√©perny≈ëre A+B=? form√°ban
# (A √©s B hely√©be a konkr√©t √©rt√©k ker√ºlj√∂n behelyettes√≠t√©sre. A program k√©rje a v√°laszt a felhaszn√°l√≥t√≥l, √©s
# adja meg, hogy a be√≠rt √©rt√©k val√≥ban a k√©t sz√°m √∂sszege-e vagy sem. (osszead)
'''
import random
vszam1 = random.randint(10,50)
vszam2 = random.randint(10,50)
keplet = vszam1 + vszam2
valasz = int(input(f'K√©rem adja meg a megold√°st: {vszam1} + {vszam2} = '))
if valasz == keplet:
    print(f'helyes')
else:
    print(f'helytelen, a helyes megold√°s: {keplet}')   '''

# 40. feladat
# Programunk gener√°ljon egy 0-100 k√∂zti eg√©sz sz√°mot, majd k√©rjen a felhaszn√°l√≥t√≥l is egy ilyet. Ha a k√©t
# sz√°m megegyezik, akkor jelenjen meg a ‚Äûnyert‚Äù, egy√©bk√©nt a ‚Äûnem nyert‚Äù sz√∂veg! (szamkitalalo)
'''
import random
vszam = random.randint(0,100)
print(vszam)
szam = int(input(f'K√©rem adjon meg egy sz√°mot 0 √©s 100 k√∂z√∂tt: '))
if vszam == szam:
     print(f'nyert')
else:
     print(f'nem nyert')   '''